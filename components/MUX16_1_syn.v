// megafunction wizard: %LPM_MUX%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: LPM_MUX 

// ============================================================
// File Name: MUX16_1.v
// Megafunction Name(s):
// 			LPM_MUX
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.1.0 Build 162 10/23/2013 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_mux DEVICE_FAMILY="Cyclone III" LPM_SIZE=16 LPM_WIDTH=1 LPM_WIDTHS=4 data result sel
//VERSION_BEGIN 13.1 cbx_lpm_mux 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = lut 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  MUX16_1_mux
	( 
	data,
	result,
	sel) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  data;
	output   [0:0]  result;
	input   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [15:0]  data;
	tri0   [3:0]  sel;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  result_node;
	wire  [3:0]  sel_ffs_wire;
	wire  [3:0]  sel_node;
	wire  [3:0]  w_data64w;
	wire  [3:0]  w_data65w;
	wire  [3:0]  w_data66w;
	wire  [3:0]  w_data67w;
	wire  [15:0]  w_data9w;
	wire  [1:0]  w_sel68w;

	assign
		result = result_node,
		result_node = {((((((w_data65w[1] & w_sel68w[0]) & (~ (((w_data65w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data65w[2]))))) | ((((w_data65w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data65w[2]))) & (w_data65w[3] | (~ w_sel68w[0])))) & sel_node[2]) & (~ ((((((w_data64w[1] & w_sel68w[0]) & (~ (((w_data64w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data64w[2]))))) | ((((w_data64w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data64w[2]))) & (w_data64w[3] | (~ w_sel68w[0])))) & (~ sel_node[3])) & (~ sel_node[2])) | (sel_node[3] & (sel_node[2] | (((w_data66w[1] & w_sel68w[0]) & (~ (((w_data66w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data66w[2]))))) | ((((w_data66w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data66w[2]))) & (w_data66w[3] | (~ w_sel68w[0]))))))))) | (((((((w_data64w[1] & w_sel68w[0]) & (~ (((w_data64w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data64w[2]))))) | ((((w_data64w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data64w[2]))) & (w_data64w[3] | (~ w_sel68w[0])))) & (~ sel_node[3])) & (~ sel_node[2])) | (sel_node[3] & (sel_node[2] | (((w_data66w[1] & w_sel68w[0]) & (~ (((w_data66w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data66w[2]))))) | ((((w_data66w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data66w[2]))) & (w_data66w[3] | (~ w_sel68w[0]))))))) & ((((w_data67w[1] & w_sel68w[0]) & (~ (((w_data67w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data67w[2]))))) | ((((w_data67w[0] & (~ w_sel68w[1])) & (~ w_sel68w[0])) | (w_sel68w[1] & (w_sel68w[0] | w_data67w[2]))) & (w_data67w[3] | (~ w_sel68w[0])))) | (~ sel_node[2]))))},
		sel_ffs_wire = {sel[3:0]},
		sel_node = {sel_ffs_wire[3:2], sel[1:0]},
		w_data64w = w_data9w[3:0],
		w_data65w = w_data9w[7:4],
		w_data66w = w_data9w[11:8],
		w_data67w = w_data9w[15:12],
		w_data9w = {data[15:0]},
		w_sel68w = sel_node[1:0];
endmodule //MUX16_1_mux
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module MUX16_1 (
	data0,
	data1,
	data10,
	data11,
	data12,
	data13,
	data14,
	data15,
	data2,
	data3,
	data4,
	data5,
	data6,
	data7,
	data8,
	data9,
	sel,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	  data0;
	input	  data1;
	input	  data10;
	input	  data11;
	input	  data12;
	input	  data13;
	input	  data14;
	input	  data15;
	input	  data2;
	input	  data3;
	input	  data4;
	input	  data5;
	input	  data6;
	input	  data7;
	input	  data8;
	input	  data9;
	input	[3:0]  sel;
	output	  result;

	wire [0:0] sub_wire0;
	wire  sub_wire18 = data0;
	wire  sub_wire17 = data1;
	wire  sub_wire16 = data2;
	wire  sub_wire15 = data3;
	wire  sub_wire14 = data4;
	wire  sub_wire13 = data5;
	wire  sub_wire12 = data6;
	wire  sub_wire11 = data7;
	wire  sub_wire10 = data8;
	wire  sub_wire9 = data9;
	wire  sub_wire8 = data10;
	wire  sub_wire7 = data11;
	wire  sub_wire6 = data12;
	wire  sub_wire5 = data13;
	wire  sub_wire4 = data14;
	wire [0:0] sub_wire1 = sub_wire0[0:0];
	wire  result = sub_wire1;
	wire  sub_wire2 = data15;
	wire [15:0] sub_wire3 = {sub_wire18, sub_wire17, sub_wire16, sub_wire15, sub_wire14, sub_wire13, sub_wire12, sub_wire11, sub_wire10, sub_wire9, sub_wire8, sub_wire7, sub_wire6, sub_wire5, sub_wire4, sub_wire2};

	MUX16_1_mux	MUX16_1_mux_component (
				.data (sub_wire3),
				.sel (sel),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: CONSTANT: LPM_SIZE NUMERIC "16"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MUX"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "1"
// Retrieval info: CONSTANT: LPM_WIDTHS NUMERIC "4"
// Retrieval info: USED_PORT: data0 0 0 0 0 INPUT NODEFVAL "data0"
// Retrieval info: USED_PORT: data1 0 0 0 0 INPUT NODEFVAL "data1"
// Retrieval info: USED_PORT: data10 0 0 0 0 INPUT NODEFVAL "data10"
// Retrieval info: USED_PORT: data11 0 0 0 0 INPUT NODEFVAL "data11"
// Retrieval info: USED_PORT: data12 0 0 0 0 INPUT NODEFVAL "data12"
// Retrieval info: USED_PORT: data13 0 0 0 0 INPUT NODEFVAL "data13"
// Retrieval info: USED_PORT: data14 0 0 0 0 INPUT NODEFVAL "data14"
// Retrieval info: USED_PORT: data15 0 0 0 0 INPUT NODEFVAL "data15"
// Retrieval info: USED_PORT: data2 0 0 0 0 INPUT NODEFVAL "data2"
// Retrieval info: USED_PORT: data3 0 0 0 0 INPUT NODEFVAL "data3"
// Retrieval info: USED_PORT: data4 0 0 0 0 INPUT NODEFVAL "data4"
// Retrieval info: USED_PORT: data5 0 0 0 0 INPUT NODEFVAL "data5"
// Retrieval info: USED_PORT: data6 0 0 0 0 INPUT NODEFVAL "data6"
// Retrieval info: USED_PORT: data7 0 0 0 0 INPUT NODEFVAL "data7"
// Retrieval info: USED_PORT: data8 0 0 0 0 INPUT NODEFVAL "data8"
// Retrieval info: USED_PORT: data9 0 0 0 0 INPUT NODEFVAL "data9"
// Retrieval info: USED_PORT: result 0 0 0 0 OUTPUT NODEFVAL "result"
// Retrieval info: USED_PORT: sel 0 0 4 0 INPUT NODEFVAL "sel[3..0]"
// Retrieval info: CONNECT: @data 1 0 1 0 data0 0 0 0 0
// Retrieval info: CONNECT: @data 1 1 1 0 data1 0 0 0 0
// Retrieval info: CONNECT: @data 1 10 1 0 data10 0 0 0 0
// Retrieval info: CONNECT: @data 1 11 1 0 data11 0 0 0 0
// Retrieval info: CONNECT: @data 1 12 1 0 data12 0 0 0 0
// Retrieval info: CONNECT: @data 1 13 1 0 data13 0 0 0 0
// Retrieval info: CONNECT: @data 1 14 1 0 data14 0 0 0 0
// Retrieval info: CONNECT: @data 1 15 1 0 data15 0 0 0 0
// Retrieval info: CONNECT: @data 1 2 1 0 data2 0 0 0 0
// Retrieval info: CONNECT: @data 1 3 1 0 data3 0 0 0 0
// Retrieval info: CONNECT: @data 1 4 1 0 data4 0 0 0 0
// Retrieval info: CONNECT: @data 1 5 1 0 data5 0 0 0 0
// Retrieval info: CONNECT: @data 1 6 1 0 data6 0 0 0 0
// Retrieval info: CONNECT: @data 1 7 1 0 data7 0 0 0 0
// Retrieval info: CONNECT: @data 1 8 1 0 data8 0 0 0 0
// Retrieval info: CONNECT: @data 1 9 1 0 data9 0 0 0 0
// Retrieval info: CONNECT: @sel 0 0 4 0 sel 0 0 4 0
// Retrieval info: CONNECT: result 0 0 0 0 @result 0 0 1 0
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1_inst.vhd FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL MUX16_1_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
